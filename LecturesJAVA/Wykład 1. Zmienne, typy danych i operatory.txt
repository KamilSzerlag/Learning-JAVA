Zmienne, typy danych i operatory
1 Wyk³ad : 

typy danych: 
int => najbardziej popularny typ ca³kowity
float => single precision pol. jedno miejsce po przecinku
double => double precision pol. dwa miejsca po przecinku 
byte => do -128 do 127 :) zajmuje mniej miejsca w pamiêci 
Short
Long 
char => znaki
boolean > true v false 

short shortTotal = (short) .... - sposób na konwertowanie wszystkich wyrazów na dany typ
long longTotal = 5000L - je¿eli zapisujemy typ long zwykliœmy dawaæ "L" na koñcu liczby
float myFloat = 5f - dla float'a zwyklismy dawac f na koncu
double myDouble = 5d - dla double zwyklismy dawac d na koncu

*
int przy dzia³aniach typu 5/3 zwraca liczbê 1, gdy¿ jest i wartoœæ ca³kowita z dzielenia
float przy dzia³aniu typu 5/3 zwraca liczbe 1,6666666 tzn, otrzymamy 7 liczb po przecinku
float 4 bajty (32 bity) 
double przy dzia³aniu typu 5/3 zwaraca liczbe,16666666666666667 tzn, otrzymamy 16 liczb po przecinku
double 8 bajtów (64 bity) 
obecnie typem poza int-em najpopularniejszym jest typ double. Najpowszechniej stosowany w nowoczesnej architekturze 64 bitowej
i zarazem najszybciej "pracuj¹cy". Typ float obecnie jest rzadko stosowany. 
*
typ char - typ do zapisywania znaków. Mo¿e zawieraæ 2 bajty = 16 bitów -> 16 znaków
sposób zapisu: 
np: char myChar = 'A'; 
!znaki mo¿emy równie¿ zapisywaæ przy pomocy kodu UNICODE!
dla przzyk³adu:
© -> char copyright = '\u00A9';
 
typ boolean - typ logiczny, pozwalaj¹cy zapisaæ tylko dwie wartoœci albo true / false
 
*
String - 9 typ zmiennych. Mo¿e sk³adaæ siê z 8 znaków. 
pamiêtajmy, ¿e:
String myString = "10" ;
int myInt = "10";
myString = myString + myInt; 
wynik tego dzia³ania bêdzie wynosi³ "1010", int zostanie przekonwerterowawany na String.
*
Operatory zwyk³e stosowanie w Javie:

+ plus
- minus
* mno¿enie
/ dzielenie
% reszta czêsto zwana "modu³em"
i++ postinkrementacja (po wykonanym kodzie zwiêksz wartoœæ o 1)
++i preinkrementacja (przed wykonaniem zwiêksz wartoœæ o 1)

Operatory skrócone +=

! wynik += 2; taki zapis oznacza wynik = wynik + 2 ! 

!wszystkie operatory mo¿emy zapisaæ w takiej postaci!

= - nadaje nam wartoœæ zmiennej
== - s³u¿y do sprawdzania wartoœci !pamiêtaj informatyku m³ody dwa znaki equals powodem czêstego b³êdu!
!= - nierównoœæ
> - nierównoœci 
>= - wiêksze, b¹dŸ równe 
Przydatne linki:
http://cs.bilkent.edu.tr/~guvenir/courses/CS101/op_precedence.html
http://docs.oracle.com/javase/tutorial/java/nutsandbolts/opsummary.html

&& - operator logiczny "AND"
|| - operator logiczny "OR"

Operator logiczny ?
przyk³ad
ZmiennaNie = ZmiennaTAK ? true : false - oznacza, je¿eli zmienna TAK ma wartoœæ true ZmiennaNIE ma wartoœæ true,  je¿eli zmienna TAK ma wartoœæ false nadaj wartoœæ false 

dodatkowo: 
 sk³adnia "if" 
if ( zmienna == wartoœæ )
	//kod ; 


